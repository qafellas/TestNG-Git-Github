
name: TestNG-Git-Github Tests

on:
  push:
    branches: [ "master" ]

  schedule:
      - cron: '0 5 * * 3' #UTC


permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install nodejs and npm
      uses: actions/setup-node@v3
      with:
           node-version: 18

    - name: Install junit merge package and fs library
      run: npm install -g junit-merge fs

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'


    - name: Run tests
      run: mvn clean test -Dfile="testng.xml"

    - name: Merge junit xml reports
      if: always()
      run: junit-merge -o target/results.xml -d target/surefire-reports/junitreports/

    - name: Test Report
      id: test_report
      uses: dorny/test-reporter@v1
      if: always()    # run this step even if previous step failed
      with:
        name: TestNG Tests            # Name of the check run which will be created
        path: target/results.xml    # Path to test results
        reporter: java-junit       # Format of test results
        max-annotations: '30'

    - name: Read test report results
      if: always()
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN}}
      run: | 
        echo "Test Results Outputs: "
        echo "${{ toJSON(steps.test_report.outputs) }}"
        echo "FAILED=${{ steps.test_report.outputs.failed }}" | tee -a $GITHUB_ENV
        echo "PASSED=${{ steps.test_report.outputs.passed }}" | tee -a $GITHUB_ENV
        echo "SKIPPED=${{ steps.test_report.outputs.skipped }}" | tee -a $GITHUB_ENV
        echo "TEST_RUN_HTML=${{ steps.test_report.outputs.url_html}}" | tee -a $GITHUB_ENV

    - name: Create slack json report
      if: always()
      run: node src/main/java/org/qafellas/utilities/slackPayloadGenerator.js

    - name: Send JSON report to slack
      if: always()
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload-file-path: "./jsonReporter.json"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


      

